/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Member;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author LongTran
 */
public class BRDevices extends javax.swing.JFrame {

    /**
     * Creates new form BRDevices
     */
    public BRDevices() {
        this.setUndecorated(true);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lbID = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lbName = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtPro = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        lbWho = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtQuan = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnOK = new javax.swing.JButton();
        btnCan = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(102, 51, 0)));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("ID");

        lbID.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbID.setForeground(new java.awt.Color(0, 0, 255));
        lbID.setText("ID");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Name");

        lbName.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbName.setForeground(new java.awt.Color(0, 0, 255));
        lbName.setText("Name");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Who borrow");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Project");

        lbWho.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        lbWho.setForeground(new java.awt.Color(0, 0, 255));
        lbWho.setText("Who");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Quantity");

        txtQuan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtQuanFocusGained(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 51, 0));
        jLabel9.setText("Borrow devices");

        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("*");

        btnOK.setBackground(new java.awt.Color(102, 0, 255));
        btnOK.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnOK.setForeground(new java.awt.Color(255, 255, 255));
        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnCan.setBackground(new java.awt.Color(102, 0, 255));
        btnCan.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnCan.setForeground(new java.awt.Color(255, 255, 255));
        btnCan.setText("Cancel");
        btnCan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addGap(56, 56, 56))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2))
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnCan, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE))
                            .addComponent(txtPro)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbName)
                                    .addComponent(lbID))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtQuan, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(13, 13, 13)
                        .addComponent(lbWho)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lbID))
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lbName))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lbWho))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(txtPro, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtQuan, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCan, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(btnOK, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private String type;
    public void setTyp(String type){
        this.type = type;
    }
    
    private String status;
    public void setta(String status){
        this.status = status;
    }
    private Connection con = null;
    
     
    
    private void Insert(){
          
           try {
            con = Connect.connect();
            Statement s = con.createStatement();
            String ID = lbID.getText();
            String Name = lbName.getText();
            String Who = lbWho.getText();
            String Pro = txtPro.getText();
            String Quan = txtQuan.getText();
            
            String sql = "insert into borrowde values ('"+ID+"','"+Name+"','"+Who+"','"+Pro+"','"+status+"',"+Quan+",'Pending','"+type+"','"+IDUS+"')";
            String sql2 = "insert into borrowde2 values ('"+ID+"','"+Name+"','"+Who+"','"+Pro+"','"+status+"',"+Quan+",'Pending','"+type+"','"+IDUS+"')";
            s.executeUpdate(sql);
            s.executeUpdate(sql2);
            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
     
      }
    
    private int deleteQuan(){
        int Q = 0;
        try {
            con = Connect.connect();
            Statement s = con.createStatement();
            String ID = lbID.getText();
            String Quan = txtQuan.getText();
            int b = Integer.parseInt(Quan);
            String find = "select QuantityEm from embedded where IDEm = '"+ID+"' and StatusEm = '"+status+"'";
            ResultSet rs = s.executeQuery(find);
            if(rs.next()){
                int a = rs.getInt(1);
                if(b <= a){
                    Q = a - b;
                }
            }
            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return Q;
    }
    
    private int addQuan(){
        int Q = 0;
        try {
            con = Connect.connect();
            Statement s = con.createStatement();
            String ID = lbID.getText();
            String Quan = txtQuan.getText();
            int b = Integer.parseInt(Quan);
            String find = "select QuantityEm from embedded where IDEm = '"+ID+"' and StatusEm = '"+status+"'";
            ResultSet rs = s.executeQuery(find);
            if(rs.next()){
                int a = rs.getInt(1);
                if(b <= a){
                    Q = a + b;
                }
            }
            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return Q;
    }
    
     private int addQuanBorrow(){
        int Q = 0;
        try {
            con = Connect.connect();
            Statement s = con.createStatement();
            String ID = lbID.getText();
            String Quan = txtQuan.getText();
            int b = Integer.parseInt(Quan);
            String find = "select QuantityEm from borrowde where IDEm = '"+ID+"' and Status = '"+status+"' and FullName = '"+lbWho.getText()+"'";
            ResultSet rs = s.executeQuery(find);
            if(rs.next()){
                int a = rs.getInt(1);
                if(b <= a){
                    Q = a + b;
                }
            }
            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return Q;
    }
    
    private void updateQuan(){
        try {
           con = Connect.connect();
            Statement s = con.createStatement();
            String ID = lbID.getText();
            
            
          String sql = "update `Embedded` set `QuantityEm` = "+deleteQuan()+" where `IDEm` = '"+ID+"' and `StatusEm` = '"+status+"'";
            s.executeUpdate(sql);
            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    private void updateBorrow(){
        try {
           con = Connect.connect();
            Statement s = con.createStatement();
            String ID = lbID.getText();
            String sql = "update `borrowde` set `QuantityEm` = "+addQuanBorrow()+" where `IDEm` = '"+ID+"' and `Status` = '"+status+"' and `FullName` = '"+lbWho.getText()+"'";
            String sql2 = "update `borrowde2` set `QuantityEm` = "+addQuanBorrow()+" where `IDEm` = '"+ID+"' and `Status` = '"+status+"' and `FullName` = '"+lbWho.getText()+"'";
            s.executeUpdate(sql);
            s.executeUpdate(sql2);
            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
//    
//    private void updateQuan2(){
//        try {
//           con = Connect.connect();
//            Statement s = con.createStatement();
//            String ID = lbID.getText();
//            
//            
//            String sql = "update `Embedded` set `QuantityEm` = "+addQuan()+" where `IDEm` = '"+ID+"' and `StatusEm` = '"+status+"'";
//            s.executeUpdate(sql);
//            con.close();
//        } catch (Exception ex) {
//            ex.printStackTrace();
//        }
//    }
    
    private String IDUS;
    public void setIDUS(String IDUS){
        this.IDUS =IDUS;
    }
    
    private boolean Quan(){
        boolean check = false;
        try {
            
           con = Connect.connect();
            Statement s = con.createStatement();
            String ID = lbID.getText();
            String Quan = txtQuan.getText();
            int b = Integer.parseInt(Quan);
            String find = "select QuantityEm from Embedded where IDEm = '"+ID+"' and StatusEm = '"+status+"'";
            ResultSet rs = s.executeQuery(find);
            if(rs.next()){
                int a = rs.getInt(1);
                
                if(b <= a){
                    check = true;
                }else{
                    check = false;
                }
            }
            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        return check;
    }
    
    private int row;

    public void setRow(int row) {
        this.row = row;
    }
    
    private void btnCanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCanActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCanActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        String c = txtQuan.getText();
        int d;
        
        if(c.equals("")){
            JOptionPane.showMessageDialog(null, "Quantity illegal!");
        }else {
            d = Integer.valueOf(c);
            if(d > 0){
            if(Quan() == true){
                try {
            con = Connect.connect();
            Statement s = con.createStatement();
            String ID = lbID.getText();
            
            String find = "select QuantityEm from borrowde where IDEm = '"+ID+"' and Status = '"+status+"' and FullName = '"+lbWho.getText()+"' and Project = '"+txtPro.getText()+"' and Type = '"+type+"' and ConfirmEm = 'Pending'";
            ResultSet rs = s.executeQuery(find);
            if(rs.next()){
                updateBorrow();
                Object a = deleteQuan();
                int b = (int) a;
                String Quan = String.valueOf(b);
                updateQuan();
                JOptionPane.showMessageDialog(null, "Borrow success!!");
                Borrow.tableModel.setValueAt(Quan,row,4);
                
            }else{
                Insert();
                Object a = deleteQuan();
                int b = (int) a;
                String Quan = String.valueOf(b);
                updateQuan();
                JOptionPane.showMessageDialog(null, "Borrow success!!");
                Borrow.tableModel.setValueAt(Quan,row,4);
            }
            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
            this.dispose();
            }else{
                JOptionPane.showMessageDialog(null, "Quantity illegal!");
            }
            }else{
                JOptionPane.showMessageDialog(null, "Quantity illegal!");
            }
        }
        
    }//GEN-LAST:event_btnOKActionPerformed

    private void txtQuanFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtQuanFocusGained
        txtQuan.setText(null);
    }//GEN-LAST:event_txtQuanFocusGained
    int posX=0,posY=0;
    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
        posX=evt.getX();
        posY=evt.getY();
    }//GEN-LAST:event_jPanel1MousePressed

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        this.setLocation (evt.getXOnScreen()-posX,evt.getYOnScreen()-posY);
    }//GEN-LAST:event_jPanel1MouseDragged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BRDevices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BRDevices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BRDevices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BRDevices.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BRDevices().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCan;
    private javax.swing.JButton btnOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JLabel lbID;
    public javax.swing.JLabel lbName;
    public javax.swing.JLabel lbWho;
    public javax.swing.JTextField txtPro;
    public javax.swing.JTextField txtQuan;
    // End of variables declaration//GEN-END:variables
}
