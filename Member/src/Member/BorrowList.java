/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Member;

import static Member.Borrow.tableModel;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LongTran
 */
public class BorrowList extends javax.swing.JPanel {

    /**
     * Creates new form BorrowList
     */
    public BorrowList() {
        initComponents();
        Clear();
        loadTable();
        //lbName.setVisible(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBorrowList = new javax.swing.JTable();
        btnDELETE = new javax.swing.JButton();
        btnRR = new javax.swing.JButton();

        setBackground(new java.awt.Color(179, 216, 252));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 51, 0));
        jLabel1.setText("Borrow list");

        txtSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSearchFocusGained(evt);
            }
        });

        btnSearch.setBackground(new java.awt.Color(51, 0, 255));
        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 267, Short.MAX_VALUE)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tblBorrowList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblBorrowList);

        btnDELETE.setBackground(new java.awt.Color(102, 51, 255));
        btnDELETE.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnDELETE.setForeground(new java.awt.Color(255, 255, 255));
        btnDELETE.setText("Delete");
        btnDELETE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDELETEActionPerformed(evt);
            }
        });

        btnRR.setBackground(new java.awt.Color(102, 51, 255));
        btnRR.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnRR.setForeground(new java.awt.Color(255, 255, 255));
        btnRR.setText("Re-Request");
        btnRR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnRR, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDELETE, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDELETE, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRR, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 14, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private String name;
    public void setName(String name) {
        this.name = name;
    }
    
    private String US;
    public void setUS(String US) {
        this.US = US;
    }
    
    public static DefaultTableModel tableModel = new DefaultTableModel(){

        @Override
        public boolean isCellEditable(int row, int column)
        {
            return false;
        }
         
    };
    private Connection con = null;
    private void loadTable(){
         try {
            con = Connect.connect();
            
            Statement s = con.createStatement();
            
            ResultSet rs = s.executeQuery("SELECT * FROM `borrowde` WHERE FullName = '"+name+"'");
            String []colsName = {"ID", "Name","Project","Status","Quantity","Type","Confirm"};
            tableModel.setColumnIdentifiers(colsName); 
            tblBorrowList.setModel(tableModel);
            while(rs.next()){ 
                String Quan = String.valueOf(rs.getInt(6));
                Object rows[] = new Object[7];
                rows[0] = rs.getString(1);
                rows[1] = rs.getString(2);  
                rows[2] = rs.getString(4);
                rows[3] = rs.getString(5);
                rows[4] = Quan;
                rows[5] = rs.getString(8);
                rows[6] = rs.getString(7);
                tableModel.addRow(rows);
            }
            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
     private void Clear(){
        int dem = tblBorrowList.getRowCount();
        try{
        while (dem > 0 ){
            tableModel.removeRow(0);
        }
        }catch(java.lang.ArrayIndexOutOfBoundsException e){
            e.getMessage();
        }
    }
    
    private void txtSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchFocusGained
        Clear();
        loadTable();
        txtSearch.setText(null);
    }//GEN-LAST:event_txtSearchFocusGained

    private void Search(){
         try {
           con = Connect.connect();
            Statement s = con.createStatement();
            String Search = txtSearch.getText(); 
            String sql = "SELECT * FROM `borrowde` where `FullName` = '"+name+"' and  (`IDEm` Like '%"+Search+"%' or `NameEm` Like '%"+Search+"%' or `Project` Like '%"+Search+"%'or `QuantityEm` = '"+Search+"' or `Type` Like '%"+Search+"%'or `ConfirmEm` Like '%"+Search+"%')";
            ResultSet rs = s.executeQuery(sql);
            while(rs.next()){ 
                String Quan = String.valueOf(rs.getInt(6));
                
                Object rows[] = new Object[7];
                rows[0] = rs.getString(1);
                rows[1] = rs.getString(2);  
                rows[2] = rs.getString(4);
                rows[3] = rs.getString(5);
                rows[4] = Quan;
                rows[5] = rs.getString(8);
                rows[6] = rs.getString(7);
                tableModel.addRow(rows);
            }
            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
     }
    
     private void ReRequest(){
         int i =  tblBorrowList.getSelectedRow();
            String ID = (String) tableModel.getValueAt(i, 0);
            String Pro = (String) tableModel.getValueAt(i, 2);
            String Confirm = (String) tableModel.getValueAt(i, 6);
            String Status = (String) tableModel.getValueAt(i, 3);
            String Type = (String) tableModel.getValueAt(i, 5);
            String Quan = (String) tableModel.getValueAt(i, 4);
            int q = Integer.parseInt(Quan);
            
        try {
           con = Connect.connect();
            Statement s = con.createStatement();
            
            if(Confirm.equals("No")){
                String sql = "update borrowde set ConfirmEm = 'Pending' where `IDEm` = '"+ID+"' and `Status` = '"+Status+"' and `FullName` = '"+name+"' and `Project` = '"+Pro+"' and `Type` = '"+Type+"' and `QuantityEm` = "+q+"";
                String sql2 = "update borrowde2 set ConfirmEm = 'Pending' where `IDEm` = '"+ID+"' and `Status` = '"+Status+"' and `FullName` = '"+name+"' and `Project` = '"+Pro+"' and `Type` = '"+Type+"' and `QuantityEm` = "+q+"";
                s.executeUpdate(sql);
                s.executeUpdate(sql2);
                JOptionPane.showMessageDialog(null, "Re-Request seccess!");
                Clear();
                loadTable();
               
            }
            con.close();
        } catch (Exception ex) {
            
        }
    }
    
     private void Delete(){
         int i =  tblBorrowList.getSelectedRow();
            String ID = (String) tableModel.getValueAt(i, 0);
            String Pro = (String) tableModel.getValueAt(i, 2);
            String Confirm = (String) tableModel.getValueAt(i, 6);
            String Status = (String) tableModel.getValueAt(i, 3);
            String Type = (String) tableModel.getValueAt(i, 5);
            String Quan = (String) tableModel.getValueAt(i, 4);
            int q = Integer.parseInt(Quan);
            
        try {
           con = Connect.connect();
            Statement s = con.createStatement();
            
            if(Confirm.equals("No")){
                String sql = "delete from borrowde where ConfirmEm = 'No' and `IDEm` = '"+ID+"' and `Status` = '"+Status+"' and `FullName` = '"+name+"' and `Project` = '"+Pro+"' and `Type` = '"+Type+"' and `QuantityEm` = "+q+"";
                String sql2 = "delete from borrowde2 where ConfirmEm = 'No' and `IDEm` = '"+ID+"' and `Status` = '"+Status+"' and `FullName` = '"+name+"' and `Project` = '"+Pro+"' and `Type` = '"+Type+"' and `QuantityEm` = "+q+"";
                s.executeUpdate(sql);
                s.executeUpdate(sql2);
                JOptionPane.showMessageDialog(null, "Delete request seccess!");
                Clear();
                loadTable();
               
            }
            con.close();
        } catch (Exception ex) {
            
        }
    }
     
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        if(txtSearch.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Search not empty!");
        }else{
            Clear();
            Search();
            int Count = tblBorrowList.getRowCount();
            if(Count == 0){
                JOptionPane.showMessageDialog(null, "Don't search this database!");
                Clear();
            }else{
                Clear();
                Search();
                JOptionPane.showMessageDialog(null, "Search seccess!");
            }
        }
    
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnRRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRRActionPerformed
        ReRequest();
    }//GEN-LAST:event_btnRRActionPerformed

    private void btnDELETEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDELETEActionPerformed
        Delete();
    }//GEN-LAST:event_btnDELETEActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDELETE;
    private javax.swing.JButton btnRR;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable tblBorrowList;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
