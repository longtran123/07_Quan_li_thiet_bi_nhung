/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Embedded;

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Random;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;

/**
 *
 * @author LongTran
 */
public class NewAccount extends javax.swing.JPanel {

    /**
     * Creates new form NewAccount
     */
    private int randomValue;
    private final static int NOV = 10000;
    private java.util.Random rd = new Random();
    public NewAccount() {
        initComponents();
        randomValue = rd.nextInt(NOV);
        String a = String.format("%04d", randomValue);
        txtCapcha.setText(a);
        txtCapcha.setEditable(false);
        txtCon.setDocument(new LengthRestrictedDocument(4));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtFN = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtUS = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtAdd = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbbGen = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        cbbYear = new javax.swing.JComboBox<>();
        cbbMonth = new javax.swing.JComboBox<>();
        cbbDay = new javax.swing.JComboBox<>();
        txtEM = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtPW = new javax.swing.JPasswordField();
        txtCPW = new javax.swing.JPasswordField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtCapcha = new javax.swing.JTextField();
        txtCon = new javax.swing.JTextField();
        btnChange = new javax.swing.JButton();
        btnCreate = new javax.swing.JButton();

        setBackground(new java.awt.Color(193, 218, 193));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Create new account");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        txtFN.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtFN.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtFN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtFNMouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Username");

        txtUS.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtUS.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtUS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtUSMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Full Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Password");

        txtAdd.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtAdd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtAddMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Address");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Confirm Password");

        cbbGen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Unknow" }));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Day of birth");

        cbbYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Year", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000" }));
        cbbYear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbbYearMouseClicked(evt);
            }
        });

        cbbMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        cbbMonth.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbbMonthMouseClicked(evt);
            }
        });

        cbbDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        cbbDay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbbDayMouseClicked(evt);
            }
        });

        txtEM.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtEM.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtEM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtEMMouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Email");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Confirm");

        txtPW.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtPW.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtPW.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPWMouseClicked(evt);
            }
        });

        txtCPW.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        txtCPW.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtCPW.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCPWMouseClicked(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Gender");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Capcha");

        txtCapcha.setFont(new java.awt.Font("Segoe Script", 1, 36)); // NOI18N
        txtCapcha.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCapcha.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtCon.setFont(new java.awt.Font("Tahoma", 0, 30)); // NOI18N
        txtCon.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        txtCon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtConMouseClicked(evt);
            }
        });

        btnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeActionPerformed(evt);
            }
        });

        btnCreate.setBackground(new java.awt.Color(0, 153, 51));
        btnCreate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnCreate.setForeground(new java.awt.Color(255, 255, 255));
        btnCreate.setText("Create");
        btnCreate.setBorder(null);
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtUS, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtPW, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtCapcha, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(btnChange, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtCPW))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(156, 156, 156)
                                .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel3))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtFN, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbbGen, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEM, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCon, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(cbbDay, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbbYear, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtFN, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUS, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPW, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCPW, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtCapcha, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11))
                            .addComponent(btnChange, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtEM, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8))
                                .addGap(71, 71, 71))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(143, 143, 143))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cbbGen, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel10)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(txtCon, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(cbbYear, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbbMonth, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbbDay, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private String Day(){
        String DOB = null;
        if(cbbDay.getSelectedItem().equals("Day")){
            cbbDay.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
             cbbDay.setToolTipText("You need select the Day of birth");
        }
        if(cbbMonth.getSelectedItem().equals("Month")){
            cbbMonth.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
             cbbMonth.setToolTipText("You need select the Month of birth");
        }
        if(cbbYear.getSelectedItem().equals("Year")){
            cbbYear.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
             cbbYear.setToolTipText("You need select the Year of birth");
        }else {
        String Day = (String) cbbDay.getSelectedItem();
        String Month = (String) cbbMonth.getSelectedItem();
        String Year = (String) cbbYear.getSelectedItem();
        DOB = Year + "-" + Month + "-" + Day;
           
        }
        System.out.println(DOB); 
        return DOB;
    }
    
     private void ErrorFN(){
        txtFN.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
        txtFN.setToolTipText("Full name not empty!");
        
    }
    
  
    
    private void ErrorAdd(){
        txtAdd.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
        txtAdd.setToolTipText("Address not empty!");
    }
    
    private void ErrorEM(){
        txtEM.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
        txtEM.setToolTipText("Email not empty!");
        
    }
    private void ErrorUS(){
        txtUS.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
        txtUS.setToolTipText("Username not empty!");
    }
    
    private void ErrorPW(){
        txtPW.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
        txtPW.setToolTipText("Password not empty!");
    }
    
    private void ErrorCPW(){
        txtCPW.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
        txtCPW.setToolTipText("Comfirm password not empty!");
        
    }
    
    private void SetError(){
        if(txtFN.getText().equals("")){
             ErrorFN();
         }
        if(txtAdd.getText().equals("") || txtAdd.getText().equals("Address")){
             ErrorAdd();
         }
         if(txtEM.getText().equals("") || txtEM.getText().equals("Email")){
             ErrorEM();
         }
         if(cbbDay.getSelectedItem().equals("Day")){
             cbbDay.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
             cbbDay.setToolTipText("You need select the day of birth");
        }
         if(cbbMonth.getSelectedItem().equals("Month")){
             cbbMonth.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
             cbbMonth.setToolTipText("You need select the month of birth");
         }
         if(cbbYear.getSelectedItem().equals("Year")){
             cbbYear.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
             cbbYear.setToolTipText("You need select the year of birth");
         }
         if(txtUS.getText().equals("")){
             ErrorUS();
         }
         if(txtPW.getText().equals("")){
             ErrorPW();
         }
         
         if(txtCPW.getText().equals("")){
             ErrorCPW();
         }else {
             String pw = txtPW.getText();
             String cpw = txtCPW.getText();
             if(!pw.equals(cpw)){
                txtCPW.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
                 JOptionPane.showMessageDialog(null, "The comfirm password incorect");
             }
        }
         
         if(!txtCon.getText().equals(txtCapcha.getText())){
             txtCon.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
             JOptionPane.showMessageDialog(null, "Capcha incorect");
         }
         ////
         if(!txtFN.getText().matches(r1)){
            txtFN.setToolTipText("Full name illegal");
            txtFN.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
        }
         if(!txtEM.getText().matches(EMAIL_REGEX)){
            txtEM.setToolTipText("Email illegal");
            txtEM.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
         }
//         if(!txtUS.getText().matches(r1)){
//            txtUS.setToolTipText("Username illegal");
//            txtUS.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
//         }
        
    }
    
    private void Create(){
        try {
           con = Connect.connect();
            Statement st = con.createStatement();
            String Add = txtAdd.getText();
            String EM = txtEM.getText();
            String US = txtUS.getText();
            String Gen = (String) cbbGen.getSelectedItem();
            int PW = txtPW.getText().hashCode();
            String FN = txtFN.getText();
            String ID = IDUser();
            String Acc = "INSERT INTO `account` (`Username`, `Password`, `ID`) VALUES ('"+US+"', '"+PW+"', '"+ID+"')";
            String info = "INSERT INTO `infomem` (`ID`,`Username`,`Password`, `FullName`, `Address`, `Email`, `Gender`, `DOB`) values('"+ID+"','"+US+"','"+PW+"','"+FN+"','"+Add+"','"+EM+"','"+Gen+"','"+Day()+"')";
            String Remem = "INSERT INTO `remember` (`Username`, `Password`, `Status`, `ID`) VALUES ('"+US+"', '"+PW+"', 'No', '"+ID+"')";
            st.executeUpdate(Acc);
            st.executeUpdate(info);
            st.executeUpdate(Remem);
            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    private String IDUser(){
        String ID = null;
                try{
           con = Connect.connect();
            String F = txtFN.getText();
            String A = txtAdd.getText();
            randomValue = rd.nextInt(1000);
            String a = String.valueOf(F.charAt(0));
            String b = String.valueOf(A.charAt(0));
            String r = String.format("%03d", randomValue);
            ID =  a + b + r;
           String sql = "Select * from account where ID = '"+ID+"'";

           
            Statement s = con.createStatement();
            
            ResultSet rs = s.executeQuery(sql);
           
           if(rs.next()){
                randomValue = rd.nextInt(1000);
                r = String.format("%03d", randomValue);
                ID =  a + b + r;
           }
       } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Connect to database fail!! :(");
        }
                
        return ID;   
    }
   
    private boolean DOB(){
        boolean check = false;
        int Day = (int) cbbDay.getSelectedItem();
        int Month = (int) cbbMonth.getSelectedItem();
        int Year = (int) cbbYear.getSelectedItem();
        switch(Month){
            case 1: case 3: case 5: case 7: case 8: case 10: case 12:
                if(Day >= 31)
                    check = false;
                else
                    check = true;
                break;
            case 4: case 6: case 9: case 11:
                if(Day >= 30)
                    check = false;
                else
                    check = true;
                break;
            case 2:
                if((Year%4==0 && Year%100!=0) || (Year%400==0)){
                    if(Day>=29)
                        check = false;
                }else
                    if(Day>=28)
                        check = false;
                break;
        }
        return check;
    }
    
    String regex = "^[a-zA-Z_ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]+$";
    String r1 = "^[a-zA-Z ]+$";
    String EMAIL_REGEX = "^[\\w-_\\.+]*[\\w-_\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$";
    
    private void btnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeActionPerformed
        randomValue = rd.nextInt(NOV);
        String a = String.format("%04d", randomValue);
        txtCapcha.setText(a);
        txtCapcha.setEditable(false);
        txtCon.setDocument(new LengthRestrictedDocument(4));
    }//GEN-LAST:event_btnChangeActionPerformed

    private void cbbDayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbbDayMouseClicked
        cbbDay.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.white));
        cbbDay.setToolTipText(null);
    }//GEN-LAST:event_cbbDayMouseClicked

    private void cbbMonthMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbbMonthMouseClicked
        cbbMonth.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.white));
        cbbMonth.setToolTipText(null);
    }//GEN-LAST:event_cbbMonthMouseClicked

    private void cbbYearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbbYearMouseClicked
       cbbYear.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.white));
       cbbYear.setToolTipText(null);
    }//GEN-LAST:event_cbbYearMouseClicked
    private Connection con = null;
    private ResultSet rs = null;
    private PreparedStatement pst = null;
   
    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
       if(!txtFN.getText().matches(r1)){
            SetError();
        }else
         if(!txtEM.getText().matches(EMAIL_REGEX)){
           SetError();
         }else
         //////////////////////////////
         if(txtFN.getText().equals("")){
             SetError();
         }else if(txtAdd.getText().equals("")){
             SetError();
         }else if(txtEM.getText().equals("")){
             SetError();
         }else if(cbbDay.getSelectedItem().equals("Day")){
             SetError();
        }else if(cbbMonth.getSelectedItem().equals("Month")){
             SetError();
         }else if(cbbYear.getSelectedItem().equals("Year")){
             SetError();
         }else if(txtUS.getText().equals("")){
             SetError();
         }else if(txtPW.getText().equals("")){
            SetError();
         }else if(txtCPW.getText().equals("")){
            SetError();
         }else if(!txtPW.getText().equals(txtCPW.getText())){
             SetError();
         }else if(!txtCon.getText().equals(txtCapcha.getText())){
             SetError();
         }else{
            String sql = "Select * from account where UserName=?";
            try{
           con = Connect.connect();
           
           pst = con.prepareStatement(sql);
           pst.setString(1,txtUS.getText());
           rs = pst.executeQuery();
           if(rs.next()){
               JOptionPane.showMessageDialog(null, "The username exist!");
              
           }else{
               Create();
               JOptionPane.showMessageDialog(null, "Success!");
            }
          con.close(); 
       } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Connect to database fail!! :(");
        }
            
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    
    
    private void txtUSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtUSMouseClicked
       txtUS.setToolTipText(null);
       txtUS.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.black));
    }//GEN-LAST:event_txtUSMouseClicked

    private void txtPWMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPWMouseClicked
        txtPW.setToolTipText(null);
       txtPW.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.black));
    }//GEN-LAST:event_txtPWMouseClicked

    private void txtCPWMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCPWMouseClicked
        txtCPW.setToolTipText(null);
       txtCPW.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.black));
    }//GEN-LAST:event_txtCPWMouseClicked

    private void txtConMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtConMouseClicked
       txtCon.setToolTipText(null);
       txtCon.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.black));
    }//GEN-LAST:event_txtConMouseClicked

    private void txtFNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFNMouseClicked
        txtFN.setToolTipText(null);
       txtFN.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.black));
    }//GEN-LAST:event_txtFNMouseClicked

    private void txtAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtAddMouseClicked
        txtAdd.setToolTipText(null);
       txtAdd.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.black));
    }//GEN-LAST:event_txtAddMouseClicked

    private void txtEMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtEMMouseClicked
       txtEM.setToolTipText(null);
       txtEM.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.black));
    }//GEN-LAST:event_txtEMMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChange;
    private javax.swing.JButton btnCreate;
    private javax.swing.JComboBox<String> cbbDay;
    private javax.swing.JComboBox<String> cbbGen;
    private javax.swing.JComboBox<String> cbbMonth;
    private javax.swing.JComboBox<String> cbbYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtAdd;
    private javax.swing.JPasswordField txtCPW;
    private javax.swing.JTextField txtCapcha;
    private javax.swing.JTextField txtCon;
    private javax.swing.JTextField txtEM;
    private javax.swing.JTextField txtFN;
    private javax.swing.JPasswordField txtPW;
    private javax.swing.JTextField txtUS;
    // End of variables declaration//GEN-END:variables
    public final class LengthRestrictedDocument extends PlainDocument {

      private final int limit;

      public LengthRestrictedDocument(int limit) {
        this.limit = limit;
      }

      @Override
      public void insertString(int offs, String str, AttributeSet a)
          throws BadLocationException {
        if (str == null)
          return;

        if ((getLength() + str.length()) <= limit) {
          super.insertString(offs, str, a);
        }
      }
    }
}
