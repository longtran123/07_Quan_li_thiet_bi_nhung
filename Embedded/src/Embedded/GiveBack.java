/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Embedded;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LongTran
 */
public class GiveBack extends javax.swing.JPanel {

    /**
     * Creates new form GiveBack
     */
    public GiveBack() {
        initComponents();
        ClearCon();
        loadTableList();
        ClearGB();
        loadTableListGB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblGivebackCon = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblGivebackList = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtSearchL = new javax.swing.JTextField();

        jScrollPane3.setViewportView(jEditorPane1);

        setBackground(new java.awt.Color(193, 218, 193));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Embedded devices");

        btnSearch.setBackground(new java.awt.Color(255, 153, 0));
        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(255, 255, 255));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        txtSearch.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(102, 102, 102)));
        txtSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtSearchMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(238, 238, 238)
                .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                .addGap(31, 31, 31)
                .addComponent(btnSearch)
                .addGap(72, 72, 72))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tblGivebackCon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblGivebackCon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblGivebackConMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblGivebackCon);

        tblGivebackList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblGivebackList);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 102, 0));
        jLabel2.setText("Confirm give back");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 102, 0));
        jLabel3.setText("Give back List");

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txtSearchL.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtSearchLFocusGained(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtSearchL, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)
                                .addComponent(jButton1)
                                .addGap(47, 47, 47))
                            .addComponent(jScrollPane1)
                            .addComponent(jScrollPane2))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSearchL, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private Connection con = null;
    public static DefaultTableModel tableModel = new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int row, int column)
        {
            return false;
        }
    };
    public static DefaultTableModel tableModelGB = new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int row, int column)
        {
            return false;
        }
    };
    
    private void ClearCon(){
        int count = tblGivebackCon.getRowCount();
        try{
        while (count > 0 ){
            tableModel.removeRow(0);
        }
        }catch(java.lang.ArrayIndexOutOfBoundsException e){
            e.getMessage();
        }
    }
    
    private void ClearGB(){
        int count = tblGivebackList.getRowCount();
        try{
        while (count > 0 ){
            tableModelGB.removeRow(0);
        }
        }catch(java.lang.ArrayIndexOutOfBoundsException e){
            e.getMessage();
        }
    }
    
    private void loadTableList(){
         try {
            con = Connect.connect();
            
            Statement s = con.createStatement();
            
            ResultSet rs = s.executeQuery("SELECT * FROM borrowde where ConfirmEm = 'Received'");
            String []colsName = {"Full name", "ID","Borrow devices","Project","Status","Quantity","Type","Confirm borrow"};
            tableModel.setColumnIdentifiers(colsName); 
            tblGivebackCon.setModel(tableModel);
            while(rs.next()){ 
                Object rows[] = new Object[8];
                String Quan = String.valueOf(rs.getInt(6));
                rows[0] = rs.getString(3);
                rows[1] = rs.getString(1);  
                rows[2] = rs.getString(2);
                rows[3] = rs.getString(4);
                rows[4] = rs.getString(5);
                rows[5] = Quan;
                rows[6] = rs.getString(8);
                rows[7] = "Is Borrowing";
                tableModel.addRow(rows);
            }
            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    private void loadTableListGB(){
         try {
            con = Connect.connect();
            
            Statement s = con.createStatement();
            
            ResultSet rs = s.executeQuery("SELECT * FROM giveback");
            String []colsName = {"Full name", "ID","Borrow devices","Project","Status","Quantity","Type"};
            tableModelGB.setColumnIdentifiers(colsName); 
            tblGivebackList.setModel(tableModelGB);
            while(rs.next()){ 
                Object rows[] = new Object[7];
                String Quan = String.valueOf(rs.getInt(6));
                rows[0] = rs.getString(1);
                rows[1] = rs.getString(2);  
                rows[2] = rs.getString(3);
                rows[3] = rs.getString(4);
                rows[4] = rs.getString(5);
                rows[5] = Quan;
                rows[6] = rs.getString(7);
                tableModelGB.addRow(rows);
            }
            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    private void SearchCon(){
         try {
            con = Connect.connect();
            
            Statement s = con.createStatement();
            String Search = txtSearch.getText();
            ResultSet rs = null;
            if(!txtSearch.getText().equals("")){
                rs = s.executeQuery("SELECT * FROM `borrowde` where `ConfirmEm` = 'Received' and (`IDEm` Like '%"+Search+"%' or `NameEm` Like '%"+Search+"%' or `FullName` Like '%"+Search+"%' or `Project` Like '%"+Search+"%' or `Status` Like '%"+Search+"%' or `Type` Like '%"+Search+"%' or `QuantityEm` = '"+Search+"')");
            }else{
                rs = s.executeQuery("SELECT * FROM borrowde where ConfirmEm = 'Received' and Project = ''");
            }      
            tblGivebackCon.setModel(tableModel);
            while(rs.next()){ 
                Object rows[] = new Object[8];
                String Quan = String.valueOf(rs.getInt(6));
                rows[0] = rs.getString(3);
                rows[1] = rs.getString(1);  
                rows[2] = rs.getString(2);
                rows[3] = rs.getString(4);
                rows[4] = rs.getString(5);
                rows[5] = Quan;
                rows[6] = rs.getString(8);
                rows[7] = "Is Borrowing";
                tableModel.addRow(rows);
            }
            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    private void SearchLi(){
         try {
            con = Connect.connect();
            
            Statement s = con.createStatement();
            String Search = txtSearchL.getText();
            ResultSet rs = null;
            
                rs = s.executeQuery("SELECT * FROM `giveback` where `IDEm` Like '%"+Search+"%' or `NameEm` Like '%"+Search+"%' or `FullName` Like '%"+Search+"%' or `Project` Like '%"+Search+"%' or `Status` Like '%"+Search+"%' or `Type` Like '%"+Search+"%' or `QuantityEm` = '"+Search+"'");
            
            tblGivebackList.setModel(tableModelGB);
            while(rs.next()){ 
                Object rows[] = new Object[7];
                String Quan = String.valueOf(rs.getInt(6));
                rows[0] = rs.getString(1);
                rows[1] = rs.getString(2);  
                rows[2] = rs.getString(3);
                rows[3] = rs.getString(4);
                rows[4] = rs.getString(5);
                rows[5] = Quan;
                rows[6] = rs.getString(7);
                tableModelGB.addRow(rows);
            }
            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }
    
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        ClearCon();
        SearchCon();
        JOptionPane.showMessageDialog(null, "Search success!");
    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtSearchMouseClicked
        ClearCon();
        loadTableList();
        txtSearch.setText(null);
    }//GEN-LAST:event_txtSearchMouseClicked

    private void tblGivebackConMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblGivebackConMouseClicked
        int i = tblGivebackCon.getSelectedRow();
        Object FN = tableModel.getValueAt(i, 0);
        Object ID = tableModel.getValueAt(i, 1);
        Object Pro = tableModel.getValueAt(i, 3);
        Object Status = tableModel.getValueAt(i, 4);
        Object Quan = tableModel.getValueAt(i, 5);
        GetReturn gr = new GetReturn();
//        gr.lbName.setText((String) FN);
//        gr.lbID.setText((String) ID);
//        gr.lbPro.setText((String) Pro);
//        if(Status.equals("Normal")){
//            gr.cbbStatus.removeAllItems();
//            gr.cbbStatus.addItem("Normal");
//            gr.cbbStatus.addItem("Bad");
//            gr.cbbStatus.setSelectedItem("Normal");
//        }else if(Status.equals("Bad")){
//            gr.cbbStatus.removeAllItems();
//            gr.cbbStatus.addItem("Bad");
//            gr.cbbStatus.setSelectedItem("Bad");
//        }else{
//            gr.cbbStatus.setSelectedItem(Status);
//        }
//        gr.txtQuan.setText((String) Quan);
        try {
            con = Connect.connect();
            
            Statement s = con.createStatement();
            
            ResultSet rs = s.executeQuery("select * from borrowde where ConfirmEm = 'Received' and FullName = '"+FN+"' and Project = '"+Pro+"' and Status = '"+Status+"' and IDEm = '"+ID+"' and QuantityEm = "+Quan+"");
           
            tblGivebackCon.setModel(tableModel);
            if(rs.next()){ 
               if(Status.equals("Normal")){
                    gr.cbbStatus.removeAllItems();
                    gr.cbbStatus.addItem("Normal");
                    gr.cbbStatus.addItem("Bad");
                    gr.cbbStatus.setSelectedItem("Normal");
                }else{
                    gr.cbbStatus.setSelectedItem(Status);
                }
               gr.setQuan(rs.getInt("QuantityEm"));
               gr.lbID.setText(rs.getString("IDEm"));
               gr.lbName.setText(rs.getString("FullName"));
               gr.lbPro.setText(rs.getString("Project"));
               gr.txtQuan.setText(rs.getString("QuantityEm"));
               gr.setType(rs.getString("Type"));
               gr.setIDUS(rs.getString("IDUS"));
               gr.setName(rs.getString("NameEM"));
               gr.setVisible(true);
            }
            con.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        gr.setVisible(true);
//        try {
//            con = Connect.connect();
//            
//            Statement s = con.createStatement();
//            
//            ResultSet rs = s.executeQuery("SELECT * FROM borrowde where ConfirmEm = 'Received'");
//           
//            tblGivebackCon.setModel(tableModel);
//            if(rs.next()){ 
//               GetReturn gr = new GetReturn();
//               gr.cbbStatus.setSelectedItem(rs.getString("Status"));
//               gr.lbID.setText(rs.getString("IDEm"));
//               gr.lbName.setText(rs.getString("FullName"));
//               gr.lbPro.setText(rs.getString("Project"));
//               gr.txtQuan.setText(rs.getString("QuantityEm"));
//               gr.setType(rs.getString("Type"));
//               gr.setIDUS(rs.getString("IDUS"));
//               gr.setName(rs.getString("NameEM"));
//               gr.setVisible(true);
//            }
//            con.close();
//        } catch (Exception ex) {
//            ex.printStackTrace();
//        }
    }//GEN-LAST:event_tblGivebackConMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        ClearGB();
        SearchLi();
        JOptionPane.showMessageDialog(null, "Search success!");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtSearchLFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSearchLFocusGained
        txtSearchL.setText(null);
        ClearGB();
        loadTableListGB();
    }//GEN-LAST:event_txtSearchLFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton jButton1;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public javax.swing.JTable tblGivebackCon;
    public javax.swing.JTable tblGivebackList;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtSearchL;
    // End of variables declaration//GEN-END:variables
}
